plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlinx-serialization'
    id 'application'
    id 'kotlin-kapt'
    id 'jacoco'
}

application {
    mainClassName = "com.kyledahlin.rulebot.MainKt"
}

dependencies {

    implementation(project(":discord4k"))

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation("com.discord4j:discord4j-core:3.0.10")
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    implementation "com.discord4j:discord4j-voice:3.0.10"
    implementation "com.sedmelluq:lavaplayer:1.3.22"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.3.1")

    //networking
    implementation "io.ktor:ktor-client-core:1.3.1"
    implementation "io.ktor:ktor-client-json:1.3.1"
    implementation "io.ktor:ktor-client-json-jvm:1.3.1"
    implementation "io.ktor:ktor-client-apache:1.3.1"
    implementation "io.ktor:ktor-client-serialization-jvm:1.3.1"

    implementation 'com.google.dagger:dagger:2.26'
    kapt 'com.google.dagger:dagger-compiler:2.26'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.1"
    implementation 'org.jetbrains.exposed:exposed:0.17.3'

    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacocoCoverageReport")
}

jacocoTestReport {
    reports {
        html.destination file("${buildDir}/jacocoHtml")
        xml.enabled = true
    }
}

check.dependsOn jacocoTestReport